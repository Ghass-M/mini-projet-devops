name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

jobs:

#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#      - name: Install dependencies
#        run: |
#          pip install -r requirements.txt
#      - name: Run unit tests
#        run: |
#          pytest

  build-and-push:
#    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build images with docker-compose
        run: |
          docker-compose build
      - name: Tag and push backend image
        run: |
          docker tag flask-react-postgres_backend:latest ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-backend:latest
      - name: Tag and push frontend image
        run: |
          docker tag flask-react-postgres_frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-frontend:latest
      - name: Tag and push db image
        run: |
          docker tag postgres:14 ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-db:14
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-db:14

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/
