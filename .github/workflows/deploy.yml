name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build images with docker compose
        run: |
          docker compose build
          echo "=== Images after build ==="
          docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}" | grep -E "(REPOSITORY|${{ secrets.DOCKERHUB_USERNAME }}|local)"
      - name: Push backend image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-backend:latest
      - name: Push frontend image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-frontend:latest
      # Remove or comment out the db push since it's just the standard postgres image
      # - name: Tag and push db image
      #   run: |
      #     docker tag postgres:14 ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-db:14
      #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-react-postgres-db:14

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/